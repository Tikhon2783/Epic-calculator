package vars

import (
	"time"
	"log"
)

// Переменные для работы Postgres
const (
  DBHost string = "127.0.0.1" // ip адресс 
	DBPort uint16 = 5432				// Порт Postgres
	DBUsername string = "postgres"		// Имя пользователя
	DBPassword string = ""      // Пароль (если есть)
	DBName string = "calc_2_database" // Имя БД
	DBNameDefault string = "postgres"	// Стандартное имя БД
)

// Дефолтные временнЫе переменные
const (
  T_sum	time.Duration = time.Millisecond * 500 // Время на выполнение сложения
	T_sub	time.Duration = time.Millisecond * 500 // Время на выполнение вычитания
	T_mult	time.Duration = time.Millisecond * 500 // Время на выполнение умножения
	T_div	time.Duration = time.Millisecond * 500 // Время на выполнение деления
	T_agentTimeout time.Duration = time.Second * 5 // Таймаут для агентов
)

// Переменные для работы логгера
const (
  LoggerFlagsDebug int = log.Lshortfile | log.Ltime	// Флаги обычного логгера
	LoggerFlagsError int = log.Lshortfile | log.Ltime	// Флаги логгера ошибок
	LoggerFlagsPings int = log.Ltime                  // Флаги логгера хартбитов
  LoggerFlagsQueue int = log.Ltime                  // Флаги логгера обращений агентов к очереди выражений
	LoggerOutputDebug int = 1		// Вывод обычного логгера (0: Stdout, 1: internal/logs/debug.txt, 2: Stdout + debug.txt)
	LoggerOutputError int = 2		// Вывод логгера ошибок (0: Stderr, 1: internal/logs/errors.txt, 2: Stderr + errors.txt)
	LoggerOutputPings int = 1		// Вывод логгера пингов (0: Stdout, 1: internal/logs/heartbeats.txt, 2: Stdout + heartbeats.txt)
  LoggerOutputQueue int = 1		// Вывод логгера очереди (0: Stdout, 1: internal/logs/queue.txt, 2: Stdout + queue.txt)
)

// Переменные конфигурации агентов
const (
	N_agents int = 3	// Максимальное количество поднимаемых агентов
	N_machines int = -1	// Количество поднимаемых вычеслителей-горутин на агента (-1 если можно поднимать сколько нужно без ограничений)
)

// Данные пользователей с правами администратора (подробнее в readme)
var (
  Admins = [...]struct{Username, Password string}{
    {"John Doe", "qwerty123"},
    {"Aulus Agerius", "Lorem Ipsum"},
  }
)

// Константы JWT
const (
  SecretJWTSignature string = "goroutine"           // Подпись
  JWTValidyDuration time.Duration = 5 * time.Minute // Время действия токена
)

// HTTP
const (
  PortHttp string = ":8080"
)

// gRPC
const (
  PortGrpc string = "5000"
)

/*
                                                         ....                             
                                          :.::::-----=*%@@@@@#                            
                                    .:::-=*%#####%:..=+=---+*#....                        
                                   ::.++::=      :-..=:     ---==::.                      
                                   ::.+..=     +@+=.=     -#+-::%=.-                      
                                    .=:..--    .=:=:-:    :+-=..-=:                       
                                     =....:-::::-#@@@+-::.::-:...=                        
                                     +.........=: .:. =:.........+                        
                                    .=.........:-=.=.=-..........+                        
                                  .:-:...........=:=:-...........-::::::::.               
                       .:::::::.:-:.....::...................:.:...........-:             
          =          -:......................................:..............:-            
         ::-:::..  :-  ...:...............................................:..::           
          -:::::.-::  ....:.....................:==:..:.:::+=-=:..:.......--..-::.        
         .:=-::-+==-:....................G  O  R  O  U  T  I  N  E  -:....=::::..:.      
        -:::=:-=-::.::---:...............%=..-%:===#+-+=*-:-.:.--==-:::....-.::::...:     
      .---::*CHA:---==--:.:-::-:-.   .....:=::*++=++:::::::  ...::...:.:....=..:=-...-     
 .------:.  +:NNE....:-=-=::.+-::--.   .....:----:.......:::. ........:::::=-. .:=:..::    
          ::: .LL-----:.--.-:.::.:--:.  ....::::......:::-::::::------------. .:-:....::  
         -...  ..:::..:-.:-:..::::.::---::.    ...::-----::...:::::::::::-=:. ::::::...:- 
         :...  :.:::..:=-.  ...::::.-----:--------:::::....:--..:::::::::  .-..:::::..:::-
        ..:...-.::::::::-      ........-:--:.::........:::-:..---::::-:.    -...::::-.:::-
        -.:....-::.:.:::-        ......::=...:::::::::-:..-:..::-:=..       .- ..::-:.::::
        .:.:::.-:..:.::-.                .- ..:::::......=. ..:--:            :-.:-::::-: 
          ...:.::..::-:                   .=...::::.....:-...:-                 =:::::-.  
            -.....::-                     +@%*=---:====-=--=+*                 ::..:..=   
            ::.....:-.                   =--+*#%@@@#+++#@@%##:              .:::......-.  
            -......:-:-                 =-----------===----=:               -+:........-  
            =.....:---:                -==-----=-==-------=.                 =...:.::::   
            -:::::::-.            .::::..-===+:.  ======+:                    .....       
                                 -..:::::::--     -::::::-::.                             
                                 :::::::...          .:::::::-.    
*/
